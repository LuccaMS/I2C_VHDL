|central
i_RST => PLL:PLL_inst.areset
i_RST => Pa2Se:P2S.i_RST
i_RST => COUNTER:COUNTERA.i_RST
i_RST => DETECTOR:DETECT.i_RST
i_RST => master:MASTERA.i_RST
i_RST => slave:slv.i_RST
i_CLK => PLL:PLL_inst.inclk0
i_START => master:MASTERA.i_STARTBUTTON
i_BIT0 => Pa2Se:P2S.i_BIT0
i_BIT1 => Pa2Se:P2S.i_BIT1
i_BIT2 => Pa2Se:P2S.i_BIT2
i_BIT3 => Pa2Se:P2S.i_BIT3
o_DISPLAY[0] << slave:slv.o_DISPLAY[0]
o_DISPLAY[1] << slave:slv.o_DISPLAY[1]
o_DISPLAY[2] << slave:slv.o_DISPLAY[2]
o_DISPLAY[3] << slave:slv.o_DISPLAY[3]
o_DISPLAY[4] << slave:slv.o_DISPLAY[4]
o_DISPLAY[5] << slave:slv.o_DISPLAY[5]
o_DISPLAY[6] << slave:slv.o_DISPLAY[6]


|central|PLL:PLL_inst
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
c1 <= altpll:altpll_component.clk[1]


|central|PLL:PLL_inst|altpll:altpll_component
inclk[0] => PLL_altpll:auto_generated.inclk[0]
inclk[1] => PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => PLL_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|central|PLL:PLL_inst|altpll:altpll_component|PLL_altpll:auto_generated
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|central|Pa2Se:P2S
i_RST => w_DATA[0].ACLR
i_RST => w_DATA[1].ACLR
i_RST => w_DATA[2].ACLR
i_RST => w_DATA[3].ACLR
i_RST => w_DATA[4].ACLR
i_RST => w_DATA[5].ACLR
i_RST => w_DATA[6].ACLR
i_RST => w_DATA[7].ACLR
i_RST => o_TX~reg0.PRESET
i_RST => data_fpga[0].ENA
i_RST => data_fpga[7].ENA
i_RST => data_fpga[6].ENA
i_RST => data_fpga[5].ENA
i_RST => data_fpga[4].ENA
i_RST => data_fpga[3].ENA
i_RST => data_fpga[2].ENA
i_RST => data_fpga[1].ENA
i_CLK => data_fpga[0].CLK
i_CLK => data_fpga[1].CLK
i_CLK => data_fpga[2].CLK
i_CLK => data_fpga[3].CLK
i_CLK => data_fpga[4].CLK
i_CLK => data_fpga[5].CLK
i_CLK => data_fpga[6].CLK
i_CLK => data_fpga[7].CLK
i_CLK => w_DATA[0].CLK
i_CLK => w_DATA[1].CLK
i_CLK => w_DATA[2].CLK
i_CLK => w_DATA[3].CLK
i_CLK => w_DATA[4].CLK
i_CLK => w_DATA[5].CLK
i_CLK => w_DATA[6].CLK
i_CLK => w_DATA[7].CLK
i_CLK => o_TX~reg0.CLK
i_LOAD => o_TX.OUTPUTSELECT
i_LOAD => data_fpga.OUTPUTSELECT
i_LOAD => data_fpga.OUTPUTSELECT
i_LOAD => data_fpga.OUTPUTSELECT
i_LOAD => data_fpga.OUTPUTSELECT
i_LOAD => data_fpga.OUTPUTSELECT
i_LOAD => data_fpga.OUTPUTSELECT
i_LOAD => data_fpga.OUTPUTSELECT
i_LOAD => data_fpga.OUTPUTSELECT
i_LOAD => w_DATA.OUTPUTSELECT
i_LOAD => w_DATA.OUTPUTSELECT
i_LOAD => w_DATA.OUTPUTSELECT
i_LOAD => w_DATA.OUTPUTSELECT
i_LOAD => w_DATA.OUTPUTSELECT
i_LOAD => w_DATA.OUTPUTSELECT
i_LOAD => w_DATA.OUTPUTSELECT
i_LOAD => w_DATA.OUTPUTSELECT
i_ND => o_TX.OUTPUTSELECT
i_ND => w_DATA.OUTPUTSELECT
i_ND => w_DATA.OUTPUTSELECT
i_ND => w_DATA.OUTPUTSELECT
i_ND => w_DATA.OUTPUTSELECT
i_ND => w_DATA.OUTPUTSELECT
i_ND => w_DATA.OUTPUTSELECT
i_ND => w_DATA.OUTPUTSELECT
i_ND => w_DATA.OUTPUTSELECT
i_EDGE => w_DATA.OUTPUTSELECT
i_EDGE => w_DATA.OUTPUTSELECT
i_EDGE => w_DATA.OUTPUTSELECT
i_EDGE => w_DATA.OUTPUTSELECT
i_EDGE => w_DATA.OUTPUTSELECT
i_EDGE => w_DATA.OUTPUTSELECT
i_EDGE => w_DATA.OUTPUTSELECT
i_EDGE => w_DATA.OUTPUTSELECT
o_TX <= o_TX~reg0.DB_MAX_OUTPUT_PORT_TYPE
i_BIT0 => data_fpga.DATAB
i_BIT1 => data_fpga.DATAB
i_BIT2 => data_fpga.DATAB
i_BIT3 => data_fpga.DATAB


|central|COUNTER:COUNTERA
i_RST => w_CONT[0].ACLR
i_RST => w_CONT[1].ACLR
i_RST => w_CONT[2].ACLR
i_RST => w_CONT[3].ACLR
i_RST => w_CLR.ACLR
i_CLK => w_CONT[0].CLK
i_CLK => w_CONT[1].CLK
i_CLK => w_CONT[2].CLK
i_CLK => w_CONT[3].CLK
i_CLK => w_CLR.CLK
i_NEW_EDGE => U2.IN1
o_ND <= w_CLR.DB_MAX_OUTPUT_PORT_TYPE


|central|DETECTOR:DETECT
i_RST => w_CLK_T.ACLR
i_RST => w_CLK_S.ACLR
i_RST => w_CLK_R.ACLR
i_CLK => w_CLK_T.CLK
i_CLK => w_CLK_S.CLK
i_CLK => w_CLK_R.CLK
i_CLK_UART => w_CLK_R.DATAIN
o_EDGE_UP <= o_EDGE_UP.DB_MAX_OUTPUT_PORT_TYPE
o_EDGE_DOWN <= o_EDGE_DOWN.DB_MAX_OUTPUT_PORT_TYPE


|central|master:MASTERA
i_CLK => en_SDA~reg0.CLK
i_CLK => en_SCL~reg0.CLK
i_CLK => o_LOAD~reg0.CLK
i_CLK => w_state~3.DATAIN
i_RST => en_SDA~reg0.ACLR
i_RST => en_SCL~reg0.ACLR
i_RST => o_LOAD~reg0.ACLR
i_RST => w_state~5.DATAIN
en_SCL <= en_SCL~reg0.DB_MAX_OUTPUT_PORT_TYPE
en_SDA <= en_SDA~reg0.DB_MAX_OUTPUT_PORT_TYPE
i_EDGE => en_SDA.OUTPUTSELECT
o_LOAD <= o_LOAD~reg0.DB_MAX_OUTPUT_PORT_TYPE
i_STARTBUTTON => o_LOAD.OUTPUTSELECT
i_STARTBUTTON => w_state.DATAB
i_STARTBUTTON => w_state.DATAB
i_RESULT => en_SDA.OUTPUTSELECT
i_RESULT => w_state.OUTPUTSELECT
i_RESULT => w_state.OUTPUTSELECT
i_RESULT => en_SCL~reg0.DATAIN


|central|slave:slv
i_CLK => SER2PAR:S2P.i_CLK
i_CLK => w_SDA_PAST.CLK
i_CLK => w_number_to_display[0].CLK
i_CLK => w_number_to_display[1].CLK
i_CLK => w_number_to_display[2].CLK
i_CLK => w_number_to_display[3].CLK
i_CLK => w_RX.CLK
i_CLK => w_ND.CLK
i_CLK => w_state~4.DATAIN
i_SCL => process_0.IN1
i_SDA => w_SDA_PAST.DATAA
i_SDA => w_RX.DATAB
i_RST => SER2PAR:S2P.i_RST
i_RST => w_state.escrevendo.OUTPUTSELECT
i_RST => w_state.lendo.OUTPUTSELECT
i_RST => w_state.idle.OUTPUTSELECT
i_RST => w_number_to_display[0].ACLR
i_RST => w_number_to_display[1].ACLR
i_RST => w_number_to_display[2].ACLR
i_RST => w_number_to_display[3].ACLR
i_RST => w_RX.ACLR
i_RST => w_ND.ACLR
i_RST => SETE_SEGMENTOS:DISPLAY.i_RST
i_RST => w_SDA_PAST.ENA
i_COUNT => w_ND.OUTPUTSELECT
i_COUNT => w_state.OUTPUTSELECT
i_COUNT => w_state.OUTPUTSELECT
i_COUNT => w_state.OUTPUTSELECT
i_COUNT => w_RX.OUTPUTSELECT
i_EDGE => w_ND.DATAA
i_EDGE => w_RX.OUTPUTSELECT
o_DISPLAY[0] <= SETE_SEGMENTOS:DISPLAY.o_DISPLAY[0]
o_DISPLAY[1] <= SETE_SEGMENTOS:DISPLAY.o_DISPLAY[1]
o_DISPLAY[2] <= SETE_SEGMENTOS:DISPLAY.o_DISPLAY[2]
o_DISPLAY[3] <= SETE_SEGMENTOS:DISPLAY.o_DISPLAY[3]
o_DISPLAY[4] <= SETE_SEGMENTOS:DISPLAY.o_DISPLAY[4]
o_DISPLAY[5] <= SETE_SEGMENTOS:DISPLAY.o_DISPLAY[5]
o_DISPLAY[6] <= SETE_SEGMENTOS:DISPLAY.o_DISPLAY[6]


|central|slave:slv|SER2PAR:S2P
i_RST => ~NO_FANOUT~
i_CLK => w_DATA[0].CLK
i_CLK => w_DATA[1].CLK
i_CLK => w_DATA[2].CLK
i_CLK => w_DATA[3].CLK
i_CLK => w_DATA[4].CLK
i_CLK => w_DATA[5].CLK
i_CLK => w_DATA[6].CLK
i_CLK => w_DATA[7].CLK
i_ND => w_DATA[0].ENA
i_ND => w_DATA[1].ENA
i_ND => w_DATA[2].ENA
i_ND => w_DATA[3].ENA
i_ND => w_DATA[4].ENA
i_ND => w_DATA[5].ENA
i_ND => w_DATA[6].ENA
i_ND => w_DATA[7].ENA
o_DATA[0] <= w_DATA[0].DB_MAX_OUTPUT_PORT_TYPE
o_DATA[1] <= w_DATA[1].DB_MAX_OUTPUT_PORT_TYPE
o_DATA[2] <= w_DATA[2].DB_MAX_OUTPUT_PORT_TYPE
o_DATA[3] <= w_DATA[3].DB_MAX_OUTPUT_PORT_TYPE
o_DATA[4] <= w_DATA[4].DB_MAX_OUTPUT_PORT_TYPE
o_DATA[5] <= w_DATA[5].DB_MAX_OUTPUT_PORT_TYPE
o_DATA[6] <= w_DATA[6].DB_MAX_OUTPUT_PORT_TYPE
o_DATA[7] <= w_DATA[7].DB_MAX_OUTPUT_PORT_TYPE
i_RX => w_DATA[0].DATAIN


|central|slave:slv|SETE_SEGMENTOS:DISPLAY
i_RST => o_DISPLAY[0]$latch.PRESET
i_RST => o_DISPLAY[1]$latch.PRESET
i_RST => o_DISPLAY[2]$latch.PRESET
i_RST => o_DISPLAY[3]$latch.PRESET
i_RST => o_DISPLAY[4]$latch.PRESET
i_RST => o_DISPLAY[5]$latch.PRESET
i_RST => o_DISPLAY[6]$latch.PRESET
i_NUMERO[0] => Mux6.IN19
i_NUMERO[0] => Mux5.IN19
i_NUMERO[0] => Mux4.IN19
i_NUMERO[0] => Mux3.IN19
i_NUMERO[0] => Mux2.IN19
i_NUMERO[0] => Mux1.IN19
i_NUMERO[0] => Mux0.IN19
i_NUMERO[0] => Mux7.IN19
i_NUMERO[1] => Mux6.IN18
i_NUMERO[1] => Mux5.IN18
i_NUMERO[1] => Mux4.IN18
i_NUMERO[1] => Mux3.IN18
i_NUMERO[1] => Mux2.IN18
i_NUMERO[1] => Mux1.IN18
i_NUMERO[1] => Mux0.IN18
i_NUMERO[1] => Mux7.IN18
i_NUMERO[2] => Mux6.IN17
i_NUMERO[2] => Mux5.IN17
i_NUMERO[2] => Mux4.IN17
i_NUMERO[2] => Mux3.IN17
i_NUMERO[2] => Mux2.IN17
i_NUMERO[2] => Mux1.IN17
i_NUMERO[2] => Mux0.IN17
i_NUMERO[2] => Mux7.IN17
i_NUMERO[3] => Mux6.IN16
i_NUMERO[3] => Mux5.IN16
i_NUMERO[3] => Mux4.IN16
i_NUMERO[3] => Mux3.IN16
i_NUMERO[3] => Mux2.IN16
i_NUMERO[3] => Mux1.IN16
i_NUMERO[3] => Mux0.IN16
i_NUMERO[3] => Mux7.IN16
o_DISPLAY[0] <= o_DISPLAY[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
o_DISPLAY[1] <= o_DISPLAY[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
o_DISPLAY[2] <= o_DISPLAY[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
o_DISPLAY[3] <= o_DISPLAY[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
o_DISPLAY[4] <= o_DISPLAY[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
o_DISPLAY[5] <= o_DISPLAY[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
o_DISPLAY[6] <= o_DISPLAY[6]$latch.DB_MAX_OUTPUT_PORT_TYPE


